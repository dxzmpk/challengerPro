<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test.dao.ReplicationConnectionConfigurationMapper">
  <resultMap id="BaseResultMap" type="test.model.ReplicationConnectionConfiguration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="CHANNEL_NAME" jdbcType="CHAR" property="channelName" />
    <result column="HOST" jdbcType="CHAR" property="host" />
    <result column="PORT" jdbcType="INTEGER" property="port" />
    <result column="USER" jdbcType="CHAR" property="user" />
    <result column="NETWORK_INTERFACE" jdbcType="CHAR" property="networkInterface" />
    <result column="AUTO_POSITION" jdbcType="CHAR" property="autoPosition" />
    <result column="SSL_ALLOWED" jdbcType="CHAR" property="sslAllowed" />
    <result column="SSL_CA_FILE" jdbcType="VARCHAR" property="sslCaFile" />
    <result column="SSL_CA_PATH" jdbcType="VARCHAR" property="sslCaPath" />
    <result column="SSL_CERTIFICATE" jdbcType="VARCHAR" property="sslCertificate" />
    <result column="SSL_CIPHER" jdbcType="VARCHAR" property="sslCipher" />
    <result column="SSL_KEY" jdbcType="VARCHAR" property="sslKey" />
    <result column="SSL_VERIFY_SERVER_CERTIFICATE" jdbcType="CHAR" property="sslVerifyServerCertificate" />
    <result column="SSL_CRL_FILE" jdbcType="VARCHAR" property="sslCrlFile" />
    <result column="SSL_CRL_PATH" jdbcType="VARCHAR" property="sslCrlPath" />
    <result column="CONNECTION_RETRY_INTERVAL" jdbcType="INTEGER" property="connectionRetryInterval" />
    <result column="CONNECTION_RETRY_COUNT" jdbcType="BIGINT" property="connectionRetryCount" />
    <result column="HEARTBEAT_INTERVAL" jdbcType="DOUBLE" property="heartbeatInterval" />
    <result column="TLS_VERSION" jdbcType="VARCHAR" property="tlsVersion" />
    <result column="PUBLIC_KEY_PATH" jdbcType="VARCHAR" property="publicKeyPath" />
    <result column="GET_PUBLIC_KEY" jdbcType="CHAR" property="getPublicKey" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from replication_connection_configuration
    where CHANNEL_NAME = #{channelName,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="test.model.ReplicationConnectionConfiguration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into replication_connection_configuration (CHANNEL_NAME, HOST, PORT, 
      USER, NETWORK_INTERFACE, AUTO_POSITION, 
      SSL_ALLOWED, SSL_CA_FILE, SSL_CA_PATH, 
      SSL_CERTIFICATE, SSL_CIPHER, SSL_KEY, 
      SSL_VERIFY_SERVER_CERTIFICATE, SSL_CRL_FILE, SSL_CRL_PATH, 
      CONNECTION_RETRY_INTERVAL, CONNECTION_RETRY_COUNT, 
      HEARTBEAT_INTERVAL, TLS_VERSION, PUBLIC_KEY_PATH, 
      GET_PUBLIC_KEY)
    values (#{channelName,jdbcType=CHAR}, #{host,jdbcType=CHAR}, #{port,jdbcType=INTEGER}, 
      #{user,jdbcType=CHAR}, #{networkInterface,jdbcType=CHAR}, #{autoPosition,jdbcType=CHAR}, 
      #{sslAllowed,jdbcType=CHAR}, #{sslCaFile,jdbcType=VARCHAR}, #{sslCaPath,jdbcType=VARCHAR}, 
      #{sslCertificate,jdbcType=VARCHAR}, #{sslCipher,jdbcType=VARCHAR}, #{sslKey,jdbcType=VARCHAR}, 
      #{sslVerifyServerCertificate,jdbcType=CHAR}, #{sslCrlFile,jdbcType=VARCHAR}, #{sslCrlPath,jdbcType=VARCHAR}, 
      #{connectionRetryInterval,jdbcType=INTEGER}, #{connectionRetryCount,jdbcType=BIGINT}, 
      #{heartbeatInterval,jdbcType=DOUBLE}, #{tlsVersion,jdbcType=VARCHAR}, #{publicKeyPath,jdbcType=VARCHAR}, 
      #{getPublicKey,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="test.model.ReplicationConnectionConfiguration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update replication_connection_configuration
    set HOST = #{host,jdbcType=CHAR},
      PORT = #{port,jdbcType=INTEGER},
      USER = #{user,jdbcType=CHAR},
      NETWORK_INTERFACE = #{networkInterface,jdbcType=CHAR},
      AUTO_POSITION = #{autoPosition,jdbcType=CHAR},
      SSL_ALLOWED = #{sslAllowed,jdbcType=CHAR},
      SSL_CA_FILE = #{sslCaFile,jdbcType=VARCHAR},
      SSL_CA_PATH = #{sslCaPath,jdbcType=VARCHAR},
      SSL_CERTIFICATE = #{sslCertificate,jdbcType=VARCHAR},
      SSL_CIPHER = #{sslCipher,jdbcType=VARCHAR},
      SSL_KEY = #{sslKey,jdbcType=VARCHAR},
      SSL_VERIFY_SERVER_CERTIFICATE = #{sslVerifyServerCertificate,jdbcType=CHAR},
      SSL_CRL_FILE = #{sslCrlFile,jdbcType=VARCHAR},
      SSL_CRL_PATH = #{sslCrlPath,jdbcType=VARCHAR},
      CONNECTION_RETRY_INTERVAL = #{connectionRetryInterval,jdbcType=INTEGER},
      CONNECTION_RETRY_COUNT = #{connectionRetryCount,jdbcType=BIGINT},
      HEARTBEAT_INTERVAL = #{heartbeatInterval,jdbcType=DOUBLE},
      TLS_VERSION = #{tlsVersion,jdbcType=VARCHAR},
      PUBLIC_KEY_PATH = #{publicKeyPath,jdbcType=VARCHAR},
      GET_PUBLIC_KEY = #{getPublicKey,jdbcType=CHAR}
    where CHANNEL_NAME = #{channelName,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select CHANNEL_NAME, HOST, PORT, USER, NETWORK_INTERFACE, AUTO_POSITION, SSL_ALLOWED, 
    SSL_CA_FILE, SSL_CA_PATH, SSL_CERTIFICATE, SSL_CIPHER, SSL_KEY, SSL_VERIFY_SERVER_CERTIFICATE, 
    SSL_CRL_FILE, SSL_CRL_PATH, CONNECTION_RETRY_INTERVAL, CONNECTION_RETRY_COUNT, HEARTBEAT_INTERVAL, 
    TLS_VERSION, PUBLIC_KEY_PATH, GET_PUBLIC_KEY
    from replication_connection_configuration
    where CHANNEL_NAME = #{channelName,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select CHANNEL_NAME, HOST, PORT, USER, NETWORK_INTERFACE, AUTO_POSITION, SSL_ALLOWED, 
    SSL_CA_FILE, SSL_CA_PATH, SSL_CERTIFICATE, SSL_CIPHER, SSL_KEY, SSL_VERIFY_SERVER_CERTIFICATE, 
    SSL_CRL_FILE, SSL_CRL_PATH, CONNECTION_RETRY_INTERVAL, CONNECTION_RETRY_COUNT, HEARTBEAT_INTERVAL, 
    TLS_VERSION, PUBLIC_KEY_PATH, GET_PUBLIC_KEY
    from replication_connection_configuration
  </select>
</mapper>